<document xmlns="http://cnx.rice.edu/cnxml" xmlns:m="http://www.w3.org/1998/Math/MathML" xmlns:md="http://cnx.rice.edu/mdml">
  <title>More Details on the Third Stage of the LF Algorithm</title>
  <metadata>
  <md:content-id>m15574</md:content-id><md:title>More Details on the Third Stage of the LF Algorithm</md:title>
  <md:abstract>The third stage of the Lindsey-Fox algorithm multiplies the factors back together to check with the original polynomial coefficients.</md:abstract>
  <md:uuid>fca4a03f-b3aa-490a-a9d8-048bb4051843</md:uuid>
</metadata>

<content>
    <section id="id-409363342523">
      <title>Addendum: More details of the third (unfactor and deflation) stage </title>
      <para id="id11008652">The <term>deflation stage</term> of the <link document="m15573"> Lindsey-Fox</link> program first separates the unique, polished candidate roots that were found by the grid search and polish stages into two sets, one, a set very, very near the unit circle and the other, a set containing the rest of them. Both groups are unfactored in the frequency domain by the rootSpectrum program. It takes each zero or root, 
<m:math><m:semantics><m:mrow><m:mstyle fontsize="12pt"><m:mrow><m:mi>r</m:mi></m:mrow></m:mstyle><m:mrow/></m:mrow><m:annotation encoding="StarMath 5.0"> size 12{r} {}</m:annotation></m:semantics></m:math>, forms the associated first degree factor, 
<m:math><m:semantics><m:mrow><m:mstyle fontsize="12pt"><m:mrow><m:mrow><m:mo stretchy="false">(</m:mo><m:mrow><m:mi>z</m:mi><m:mo stretchy="false">−</m:mo><m:mi>r</m:mi></m:mrow><m:mo stretchy="false">)</m:mo></m:mrow></m:mrow></m:mstyle><m:mrow/></m:mrow><m:annotation encoding="StarMath 5.0"> size 12{ \( z - r \) } {}</m:annotation></m:semantics></m:math>, and pads with zeros to a length which is a an appropriate power of 2; i.e.<code> [1,-r,0,0,0,...].</code> The DFT's of these terms are computed and multiplied together to get the DFT of the coefficients of the candidate polynomial. Exception: if the degree is less than 500, Matlab's command “poly” is used to combine them. This is the second most time consuming part of the total program. The coefficients are calculated from the candidate zeros with the “ifft” command and compared to the original coefficients. If they are the same number, then the search and polish possibly found them all. If the polishing process says the roots are close and a comparison in the unfactoring process says the coefficients are close, then these are the two criteria for success.</para>
      <para id="id11915982">If the <term>grid search</term> and <term>polish stages</term> did not find all of the zeros, the original polynomial is deflated by removing those zeros found from it. That is done by dividing the DFT of the coefficients of the original polynomial, point-by-point, by the DFT associated with the zeros away from the unit circle which are found by the rootSpectrum program (deflation in the frequency domain). This quotient polynomial is further deflated (this time in the coefficient domain) by deconvolving it with the inverse FFT of the DFT associated with the zeros very near the unit circle. The resulting new quotient polynomial is now the original polynomial with all of the zeros found by the grid search and polish stages removed from it. This, hopefully low degree, polynomial is factored with the Matlab “roots” function and polished, first against the quotient polynomial, then the original polynomial. These new candidate zeros are added to the set found by grid search and polish, their associated spectra multiplied by that found in the “unfactoring” function, then checked to see if there are enough and if their associated coefficients are close to the original coefficients. If the answer is yes to both, the factoring is finished. If there are too few zeros, deflation will be performed again. This is repeated until all of the zeros are found or until no new ones are found. If there are still too few, a new search grid is designed with a smaller cell size and started again in stage one.</para><para id="element-188">The basic mathematics behind this program can be found <link document="m15577"> here. </link></para>
    </section>
  </content>
</document>